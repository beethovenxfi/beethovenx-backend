query MasterchefUsers(
    $skip: Int
    $first: Int
    $orderBy: User_orderBy
    $orderDirection: OrderDirection
    $where: User_filter
    $block: Block_height
) {
    farmUsers: users(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...FarmUser
    }
}

fragment FarmUser on User {
    id
    address
    amount
    rewardDebt
    beetsHarvested
    timestamp
    pool {
        id
        pair
    }
}

query Masterchefs(
    $skip: Int
    $first: Int
    $orderBy: MasterChef_orderBy
    $orderDirection: OrderDirection
    $where: MasterChef_filter
    $block: Block_height
) {
    masterChefs(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        id
        beets
        beetsPerBlock
        totalAllocPoint
        poolCount
        timestamp
        block
    }
}

query MasterchefFarms(
    $skip: Int
    $first: Int
    $orderBy: Pool_orderBy
    $orderDirection: OrderDirection
    $where: Pool_filter
    $block: Block_height
) {
    farms: pools(
        skip: $skip
        first: $first
        orderBy: $orderBy
        orderDirection: $orderDirection
        where: $where
        block: $block
    ) {
        ...Farm
    }
}

fragment Farm on Pool {
    id
    pair
    allocPoint
    lastRewardBlock
    accBeetsPerShare
    slpBalance
    userCount
    timestamp
    block
    masterChef {
        id
        totalAllocPoint
        beetsPerBlock
    }
    rewarder {
        id
        rewardTokens {
            token
            decimals
            symbol
            rewardPerSecond
        }
    }
}

query MasterchefPortfolioData($address: Bytes!, $previousBlockNumber: Int!) {
    farmUsers: users(first: 1000, where: { address: $address }) {
        ...FarmUser
    }
    previousFarmUsers: users(first: 1000, where: { address: $address }, block: { number: $previousBlockNumber }) {
        ...FarmUser
    }
}
