extend type Query {
    lges: [GqlLge!]!
    lge(id: ID!): GqlLge!
    lgeGetChartData(id: ID!): [GqlLgePriceData]!
}

extend type Mutation {
    lgeCreate(lge: GqlLgeCreateInput!): GqlLge!
    # todo: remove after successful migration
    lgeSyncFromSanity: String!
}

input GqlLgeCreateInput {
    id: ID!
    address: String!
    name: String!
    websiteUrl: String!
    tokenIconUrl: String!
    bannerImageUrl: String!
    twitterUrl: String!
    mediumUrl: String!
    discordUrl: String!
    telegramUrl: String!
    description: String!
    startTimestamp: Int!
    endTimestamp: Int!
    tokenAddress: String!
    tokenAmount: String!
    tokenStartWeight: Int!
    tokenEndWeight: Int!
    collateralAddress: String!
    collateralAmount: String!
    collateralStartWeight: Int!
    collateralEndWeight: Int!
    swapFee: String!
}

input GqlLgeUpdateInput {
    id: ID!
    name: String!
    description: String!
    websiteUrl: String!
    tokenIconUrl: String!
    twitterUrl: String!
    mediumUrl: String!
    discordUrl: String!
    telegramUrl: String!
}

type GqlLge {
    id: ID!
    address: String!
    name: String!
    websiteUrl: String!
    tokenIconUrl: String!
    bannerImageUrl: String!
    twitterUrl: String!
    mediumUrl: String!
    discordUrl: String!
    telegramUrl: String!
    description: String!
    startTimestamp: Int!
    endTimestamp: Int!
    tokenAddress: String!
    tokenDecimals: Int!
    tokenSymbol: String!
    tokenAmount: String!
    tokenStartWeight: Int!
    tokenEndWeight: Int!
    collateralAddress: String!
    collateralDecimals: Int!
    collateralAddress: String!
    collateralAmount: String!
    collateralStartWeight: Int!
    collateralEndWeight: Int!
    swapFee: String!
    adminAddress: String!
    adminIsMultisig: Boolean!
}

type GqlLgePriceData {
    timestamp: Int!
    price: Float!
    type: String!
}
