extend type Mutation {
    balancerMutationTest: String!
}

union SorResponse = GqlSorGetSwapsResponse | GqlCowSwapApiResponse

extend type Query {
    balancerQueryTest: String!
    sorGetSwaps(
        tokenIn: String!
        tokenOut: String!
        swapType: GqlSorSwapType!
        swapAmount: BigDecimal! #expected in raw amount
    ): SorResponse!
}

enum GqlSorSwapType {
    EXACT_IN
    EXACT_OUT
}

type GqlCowSwapApiResponse {
    tokenAddresses: [String!]!
    swaps: [GqlSwap!]!
    swapAmount: String!
    swapAmountForSwaps: String!
    returnAmount: String!
    returnAmountFromSwaps: String! 
    returnAmountConsideringFees: String!
    tokenIn: String!
    tokenOut: String!
    marketSp: String!
}

type GqlSwap {
    poolId: String!
    assetInIndex: Int!
    assetOutIndex: Int!
    amount: String!
    userData: String!
}
